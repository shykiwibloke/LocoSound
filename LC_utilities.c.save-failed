//
//  LC_utilities.c
//  LocoControl
//
//  Created by Chris Draper on 6/05/15.
//  Copyright (c) 2015 Winter Creek. All rights reserved.
//
//  VERSION 1.0.2 released 11/04/2017

#include "LC_utilities.h"

/*********************************************
 *
 * setDataFilePath: Sets Current Directory to the datafiles
 *
 *********************************************/

int setFilePath(char *path, bool forceCreate)
{
    setProgramFilePath();   //file path could be relative to program path so set that first

	if(chdir(path) != 0)    //Change the current working directory to where we can find the sound samples
	{
        if(forceCreate)            //if directory does not exist - caller wants it created
        {
            if(mkdir(path) != 0)
            {
                fprintf(stderr,"Could not create or verify directory '%s'\n",path);
                return 1;
            }
        }
        else
        {
            fprintf(stderr,"Invalid or protected file path argument: '%s'\n", path);
            return 1;
        }
	}
	return 0;
}

/*********************************************
 *
 * setProgramFilePath: Sets Current Directory to the Programfiles
 *
 *********************************************/
int setProgramFilePath(void)
{
	if(g_ProgramPath)
    {
        if(chdir(g_ProgramPath) == 0)    //Change the current working directory to where we can find the applications files
        {
            return 0;
        }
    }

    fprintf(stderr,"Invalid or protected Program File Path: %s\n", g_ProgramPath);
    return 1;
}


/*********************************************
 *
 * initialize file paths
 *
 *********************************************/

void iniFilePaths(void)
{
    	//set defaults
    g_ProgramPath = SDL_GetBasePath();
    setProgramFilePath();                   //need to explicitly set the path for some env such as windows
}


/*********************************************
 *
 * open Log File
 *
 *********************************************/

void openLogFile(void)
{
    char filename[] = "LOGXXXXXX";

    if(g_Debug)
    {
        if (setFilePath(getConfigStr("LOG_FILE_PATH"),true))
        {
            g_Debug = false;        //Cant open log file directory so cant debug
            return;
        }

        g_LogFileHandle = mktemp(filename);

        atexit(closeLogFile);

        logMessage("Log File Created\n");
	}

}

/*********************************************
 *
 * close Log File
 *
 *********************************************/

void closeLogFile(void)
{
   logMessage("Log File Closed\n");
   fclose(g_LogFileHandle);
}

/*********************************************
 *
 * Log a message to the Log File
 *
 *********************************************/

void logMessage(char * msg)
{
 if(g_LogFileHandle)
 {
     time_t ltime;

     ltime=time(NULL); /* get current cal time */

     fprintf(g_LogFileHandle,"%s : %s",asctime( localtime(&ltime)),msg);
 }
}

/*********************************************
 *
 * string trim utilities LTrim, RTrim and Trim
 *
 *********************************************/

char *LTrim(char *s)	 //returns pointer to first non-space character from the lefthand end or begining of provided string
{
	while(isspace(*s)) s++;
	return s;
}

char *RTrim(char *s)     //returns pointer to first non-space character from the righthand end or end of provided string
{
	char* back = s + strlen(s);
	while(isspace(*--back));
	*(back+1) = '\0';
	return s;
}

char *Trim(char *s)    //returns pointer to first non-space character from lefthand after removing all righthand end spaces.
{
	if (!s)
		return NULL;		//handle NULL string
	if(!*s)
		return s;		//handle empty string

	return RTrim(LTrim(s));
}
